{
    "forbidden": [{
            "name": "cli-to-main-only",
            "comment": "cli should only depend on the public interface in main",
            "severity": "error",
            "from": { "path": "(^src/cli)" },
            "to": { "pathNot": "^src/main|^node_modules|^fs$|$1" }
        }, {
            "name": "bin-to-cli-only",
            "comment": "bin should only depend on cli",
            "severity": "error",
            "from": { "path": "(^bin/dependency-cruise)" },
            "to": { "pathNot": "^src/cli|^node_modules|^package.json$" }
        }, {
            "name": "restricct-fs-access",
            "comment": "restrict file access to a few modules only",
            "severity": "error",
            "from": { "path": "^src/(report|validate|main|extract/transpile)" },
            "to": { "path": "^fs$" }
        }, {
            "name": "no-deprecated-core",
            "comment": "These core modules are deprecated - find an alternative.",
            "severity": "error",
            "from": {},
            "to": { "dependencyTypes": ["core"], "path": "^(punycode|domain)$" }
        }, {
            "name": "no-inter-module-test",
            "severity": "error",
            "from": { "path": "(^test/[^\\/]+/)[^\\.]+\\.spec\\.js" },
            "to": { "path": "^test/[^\\/]+/.+", "pathNot": "utl|$1[^\\.]+\\.json$"}
        }, {
            "name": "prefer-no-lodash",
            "comment": "We want to minimize the dependency on lodash a bit - so flag dependencies that go there",
            "severity": "info",
            "from": {},
            "to": { "path": "lodash"}
        }, {
            "name": "no-dep-on-test",
            "severity": "error",
            "from": { "path": "^(src|bin)" },
            "to": { "path": "^test|\\.spec\\.(js|ts|ls|coffee|litcoffee|coffee\\.md)$"}
        }, {
            "name": "no-external-to-here",
            "comment": "you never know...",
            "severity": "info",
            "from": { "pathNot": "^(src|test|bin)" },
            "to": { "path": "^(src|test)" }
        }, {
            "name": "not-to-unresolvable",
            "severity": "warn",
            "from": {},
            "to": { "couldNotResolve": true }
        }, {
            "name": "not-to-deprecated",
            "comment": "These modules are deprecated - find an alternative.",
            "severity": "warn",
            "from": {},
            "to": { "dependencyTypes": ["deprecated"] }
        }, {
            "name": "not-to-dev-dep",
            "severity": "error",
            "comment": "because an npm i --production will otherwise deliver an unreliably running module",
            "from": { "path": "^(bin|src)"},
            "to": { "dependencyTypes": ["npm-dev"] }
        }, {
            "name": "no-non-package-json",
            "severity": "error",
            "comment": "because an npm i --production will otherwise deliver an unreliably running module",
            "from": { "pathNot": "^(node_modules)"},
            "to": { "dependencyTypes": ["unknown", "undetermined", "npm-no-pkg", "npm-unknown"] }
        }, {
            "name": "optional-deps-used",
            "severity": "info",
            "comment": "nothing serious - but just check you have some try/ catches around the import/ require of these",
            "from": {},
            "to": { "dependencyTypes": ["npm-optional"] }
        }, {
            "name": "peer-deps-used",
            "comment": "peer dependencies are deprecated with the advent of npm 3 - and probably gone with version 4. Or with yarn.",
            "severity": "warn",
            "from": {},
            "to": { "dependencyTypes": ["npm-peer"] }
        },{
            "name": "no-duplicate-dep-types",
            "severity": "warn",
            "from": {},
            "to": { "moreThanOneDependencyType": true }
        },{
            "name": "no-circular",
            "severity": "error",
            "from": { "pathNot": "^(node_modules)"},
            "to": { "circular": true }
        },{
            "name": "no-GPL-license",
            "comment": "Our license (MIT) is not compatible with any form of GPL, so we are not allowed to use GPL licensed modules",
            "severity": "error",
            "from": {},
            "to": { "license": "GPL" }
        }]
}
