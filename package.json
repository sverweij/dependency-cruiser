{
  "name": "dependency-cruiser",
  "version": "10.1.0",
  "description": "Validate and visualize dependencies. With your rules. JavaScript, TypeScript, CoffeeScript. ES6, CommonJS, AMD.",
  "keywords": [
    "static analysis",
    "circular",
    "dependencies",
    "typescript",
    "javascript",
    "coffeescript",
    "ES6",
    "ES2015",
    "AMD",
    "CommonJS",
    "validation",
    "spelunking"
  ],
  "author": {
    "name": "Sander Verweij",
    "url": "https://sverweij.github.io"
  },
  "contributors": [
    {
      "name": "Klaus Meinhardt",
      "url": "https://github.com/ajafff"
    }
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sverweij/dependency-cruiser"
  },
  "bugs": {
    "url": "https://github.com/sverweij/dependency-cruiser/issues"
  },
  "homepage": "https://github.com/sverweij/dependency-cruiser",
  "bin": {
    "dependency-cruiser": "bin/dependency-cruise.js",
    "dependency-cruise": "bin/dependency-cruise.js",
    "depcruise": "bin/dependency-cruise.js",
    "depcruise-fmt": "bin/depcruise-fmt.js",
    "depcruise-wrap-stream-in-html": "bin/wrap-stream-in-html.js"
  },
  "main": "src/main/index.js",
  "exports": {
    ".": "./src/main/index.js",
    "./config-utl/extract-babel-config": "./src/config-utl/extract-babel-config.js",
    "./config-utl/extract-depcruise-config": "./src/config-utl/extract-depcruise-config/index.js",
    "./config-utl/extract-ts-config": "./src/config-utl/extract-ts-config.js",
    "./config-utl/extract-webpack-resolve-config": "./src/config-utl/extract-webpack-resolve-config.js",
    "./sample-reporter-plugin": "./configs/plugins/stats-reporter-plugin.js",
    "./sample-3d-reporter-plugin": "./configs/plugins/3d-reporter-plugin.js"
  },
  "types": "types/dependency-cruiser.d.ts",
  "files": [
    "bin",
    "configs/**/*.js",
    "src",
    "!src/**/*.json",
    "!src/**/*.hbs",
    "!src/**/*.md",
    "!**/*.DS_Store",
    "types/*.d.ts",
    "LICENSE",
    "package.json",
    "README.md"
  ],
  "scripts": {
    "build": "make build",
    "build:clean": "make clean",
    "check": "npm-run-all build lint depcruise test:cover",
    "check:full": "npm-run-all check test:glob test:yarn-pnp",
    "depcruise": "node ./bin/dependency-cruise.js src bin test configs types tools --config",
    "depcruise:explain": "node ./bin/dependency-cruise.js src bin test configs types tools --output-type err-long --config --progress none",
    "depcruise:graph:dev": "node ./bin/dependency-cruise.js bin src --prefix vscode://file/$(pwd)/ --config --output-type dot --progress cli-feedback | dot -T svg | node ./bin/wrap-stream-in-html.js | browser",
    "depcruise:graph:doc": "npm-run-all depcruise:graph:doc:json --parallel depcruise:graph:doc:fmt-* depcruise:graph:doc:samples",
    "depcruise:graph:doc:json": "node ./bin/dependency-cruise.js bin src test --config --output-type json --output-to tmp_graph_deps.json --progress",
    "depcruise:graph:doc:fmt-detail": "./bin/depcruise-fmt.js -T dot -f - tmp_graph_deps.json | dot -T svg | tee doc/real-world-samples/dependency-cruiser-without-node_modules.svg | node bin/wrap-stream-in-html.js > docs/dependency-cruiser-dependency-graph.html",
    "depcruise:graph:doc:fmt-archi": "./bin/depcruise-fmt.js -T archi -f - tmp_graph_deps.json | dot -T svg -Grankdir=TD | tee doc/real-world-samples/dependency-cruiser-archi-graph.svg | node bin/wrap-stream-in-html.js > docs/dependency-cruiser-archi-graph.html",
    "depcruise:graph:doc:fmt-dir": "./bin/depcruise-fmt.js -T ddot -f - tmp_graph_deps.json | dot -T svg -Grankdir=TD | tee doc/real-world-samples/dependency-cruiser-dir-graph.svg | node bin/wrap-stream-in-html.js > docs/dependency-cruiser-dir-graph.html",
    "depcruise:graph:doc:fmt-schema": "cd tools/schema && node ../../bin/dependency-cruise.js . --config --output-type dot | dot -T svg | tee ../overview.svg | node ../../bin/wrap-stream-in-html.js > ../../docs/schema-overview.html && cd -",
    "depcruise:graph:doc:fmt-types": "cd types && node ../bin/dependency-cruise.js . --ts-pre-compilation-deps --config --output-type dot | dot -T svg > overview.svg && cd -",
    "depcruise:graph:doc:samples": "sh tools/generate-samples.sh",
    "depcruise:graph:dot": "node ./bin/dependency-cruise.js bin src --config --output-type dot | dot -T svg > tmp_deps.svg",
    "depcruise:graph:fdp": "node ./bin/dependency-cruise.js bin src --config --output-type dot | fdp -GK=0.1 -Gsplines=true -T svg > tmp_deps.svg",
    "depcruise:graph:osage": "node ./bin/dependency-cruise.js bin src --config --output-type dot | osage -Gpack=32 -GpackMode=array2 -T svg > tmp_deps.svg",
    "depcruise:report": "node ./bin/dependency-cruise.js src bin test configs types --output-type err-html --config --output-to dependency-violations.html",
    "depcruise:focus": "node ./bin/dependency-cruise.js src bin test configs types --progress --config --output-type text --focus",
    "lint": "npm-run-all --parallel --aggregate-output lint:eslint lint:prettier:check lint:types",
    "lint:eslint": "eslint bin/dependency-cruise.js src test configs tools/**/*.mjs --cache --cache-location .cache/eslint/",
    "lint:eslint:fix": "eslint --fix bin src test configs  tools/**/*.mjs --cache --cache-location .cache/eslint/",
    "lint:fix": "npm-run-all lint:eslint:fix lint:prettier lint:types:fix",
    "lint:prettier": "prettier --loglevel warn --write src/**/*.js configs/**/*.js tools/**/*.mjs bin/* types/*.d.ts test/**/*.spec.{cjs,js} test/**/*.{spec,utl}.mjs",
    "lint:prettier:check": "prettier --loglevel warn --check src/**/*.js configs/**/*.js tools/**/*.mjs bin/* types/*.d.ts test/**/*.spec.{cjs,js} test/**/*.{spec,utl}.mjs",
    "lint:types": "npm-run-all lint:types:tsc lint:types:lint",
    "lint:types:tsc": "tsc --noEmit --strict --types --noUnusedLocals --noUnusedParameters types/dependency-cruiser.d.ts",
    "lint:types:lint": "eslint --no-ignore --config types/.eslintrc.json types/*.d.ts",
    "lint:types:fix": "eslint --no-ignore --config types/.eslintrc.json --fix types/*.d.ts",
    "scm:push": "run-p --aggregate-output scm:push:*",
    "scm:push:bitbucket-mirror": "run-p --aggregate-output scm:push:bitbucket-mirror:*",
    "scm:push:bitbucket-mirror:commits": "git push bitbucket-mirror",
    "scm:push:bitbucket-mirror:tags": "git push --tags bitbucket-mirror",
    "scm:push:github": "run-p --aggregate-output scm:push:github:*",
    "scm:push:github:commits": "git push",
    "scm:push:github:tags": "git push --tags",
    "scm:push:gitlab-mirror": "run-p --aggregate-output scm:push:gitlab-mirror:*",
    "scm:push:gitlab-mirror:commits": "git push gitlab-mirror",
    "scm:push:gitlab-mirror:tags": "git push --tags gitlab-mirror",
    "scm:stage": "git add .",
    "test": "mocha --timeout 4000 \"test/**/*.spec.{js,mjs,cjs}\"",
    "test:cover": "c8 --check-coverage --statements 99.9 --branches 99.7 --functions 100 --lines 99.9 --exclude \"{bin,configs,doc,docs,coverage,test,tools,webpack.conf.js,tmp*,src/**/*.template.js,src/cli/tools/svg-in-html-snippets/script.snippet.js,src/cli/init-config/get-user-input.js,src/cli/listeners/*/index.js}\" --reporter text-summary --reporter html --reporter json-summary npm test",
    "test:glob": "set -f && test \"`bin/dependency-cruise.js test/extract/fixtures/gather-globbing/packages/**/src/**/*.js | grep \"no dependency violations found\"`\" = \"âœ” no dependency violations found (6 modules, 0 dependencies cruised)\"",
    "test:yarn-pnp": "npm-run-all test:yarn-pnp:cleanup test:yarn-pnp:pack test:yarn-pnp:copy test:yarn-pnp:install test:yarn-pnp:version test:yarn-pnp:run test:yarn-pnp:test test:yarn-pnp:cleanup",
    "test:yarn-pnp:pack": "npm pack",
    "test:yarn-pnp:copy": "shx cp -r test/integration/yarn-pnp.template test/integration/yarn-pnp.testing-ground",
    "test:yarn-pnp:install": "cd test/integration/yarn-pnp.testing-ground && yarn && yarn add -D ../../../dependency-cruiser*.tgz",
    "test:yarn-pnp:version": "cd test/integration/yarn-pnp.testing-ground && yarn dependency-cruise:version",
    "test:yarn-pnp:run": "cd test/integration/yarn-pnp.testing-ground && yarn dependency-cruise:json",
    "test:yarn-pnp:test": "cd test/integration/yarn-pnp.testing-ground && yarn test",
    "test:yarn-pnp:cleanup": "shx rm -rf test/integration/yarn-pnp.testing-ground dependency-cruiser*.tgz",
    "test:load": "hyperfine --warmup 3 --runs 30 \"bin/dependency-cruise.js --validate -- src bin test configs types tools\"",
    "test:load:short": "hyperfine --warmup 1 --runs 5 \"bin/dependency-cruise.js --validate -- src bin test configs types tools\"",
    "test:watch": "mocha --watch --watch-extensions=json --reporter=min test/\\*\\*/\\*.spec.js",
    "update-dependencies": "npm-run-all upem:update upem:install build:clean build lint:fix depcruise test:cover",
    "upem:install": "npm install",
    "upem:update": "npm outdated --json | upem",
    "version": "npm-run-all build depcruise:graph:doc scm:stage"
  },
  "dependencies": {
    "acorn": "8.4.1",
    "acorn-jsx": "5.3.2",
    "acorn-jsx-walk": "2.0.0",
    "acorn-loose": "8.1.0",
    "acorn-walk": "8.1.1",
    "ajv": "8.6.2",
    "chalk": "4.1.2",
    "commander": "8.1.0",
    "enhanced-resolve": "5.8.2",
    "figures": "3.2.0",
    "get-stream": "6.0.1",
    "glob": "7.1.7",
    "handlebars": "4.7.7",
    "indent-string": "4.0.0",
    "inquirer": "8.1.2",
    "json5": "2.2.0",
    "lodash": "4.17.21",
    "safe-regex": "2.1.1",
    "semver": "7.3.5",
    "semver-try-require": "5.0.1",
    "teamcity-service-messages": "0.1.11",
    "tsconfig-paths-webpack-plugin": "3.5.1",
    "wrap-ansi": "7.0.0"
  },
  "devDependencies": {
    "@babel/core": "7.15.0",
    "@babel/plugin-transform-modules-commonjs": "7.15.0",
    "@babel/preset-typescript": "7.15.0",
    "@swc/core": "1.2.77",
    "@typescript-eslint/eslint-plugin": "4.29.1",
    "@typescript-eslint/parser": "4.29.1",
    "c8": "7.8.0",
    "chai": "4.3.4",
    "chai-json-schema": "1.5.1",
    "coffeescript": "2.5.1",
    "eslint": "7.32.0",
    "eslint-config-moving-meadow": "2.0.9",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-budapestian": "2.3.0",
    "eslint-plugin-import": "2.24.0",
    "eslint-plugin-mocha": "9.0.0",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-security": "1.4.0",
    "eslint-plugin-unicorn": "35.0.0",
    "husky": "4.3.0",
    "intercept-stdout": "0.1.2",
    "lint-staged": "11.1.2",
    "mocha": "9.0.3",
    "normalize-newline": "4.1.0",
    "npm-run-all": "4.1.5",
    "prettier": "2.3.2",
    "shx": "0.3.3",
    "svelte": "3.42.1",
    "symlink-dir": "5.0.1",
    "typescript": "4.3.5",
    "upem": "6.0.0",
    "vue-template-compiler": "2.6.14",
    "yarn": "1.22.11"
  },
  "upem": {
    "donotup": [
      {
        "package": "figures",
        "because": "version 4 only exports ejs - and we use cjs and don't transpile"
      },
      {
        "package": "husky",
        "because": "https://github.com/typicode/husky/issues/822"
      },
      {
        "package": "indent-string",
        "because": "version 5 only exports ejs - and we use cjs and don't transpile"
      },
      {
        "package": "wrap-ansi",
        "because": "version 8 only exports ejs - and we use cjs and don't transpile"
      }
    ]
  },
  "eslintIgnore": [
    ".pnp.cjs",
    ".yarn",
    "node_modules",
    "coverage",
    "tmp",
    "src/**/*.schema.js",
    "src/**/*.template.js",
    "src/cli/tools/svg-in-html-snippets/script.snippet.js",
    "test/integration/**",
    "test/*/fixtures/**",
    "test/*/*/fixtures/**",
    "test/*/mocks/**",
    "test/*/*/mocks/**",
    "types/**"
  ],
  "engines": {
    "node": "^12.20||^14||>=16"
  },
  "supportedTranspilers": {
    "babel": ">=7.0.0 <8.0.0",
    "coffee-script": ">=1.0.0 <2.0.0",
    "coffeescript": ">=1.0.0 <3.0.0",
    "livescript": ">=1.0.0 <2.0.0",
    "svelte": ">=3.0.0 <4.0.0",
    "swc": ">=1.0.0 <2.0.0",
    "typescript": ">=2.0.0 <5.0.0",
    "vue-template-compiler": ">=2.0.0 <3.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "{src,config}/**/*.js": [
      "eslint --fix"
    ],
    "{tools,src,config}/**/*.{mjs,js,json}": [
      "prettier --write"
    ],
    "bin/*": [
      "eslint --fix",
      "prettier --write"
    ],
    "test/**/*.{utl,spec}.js": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.d.ts": [
      "eslint --config types/.eslintrc.json --fix",
      "prettier --write --ignore-path .prettierignore"
    ]
  }
}
